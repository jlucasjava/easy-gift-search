
const axios = require('axios');
require('dotenv').config();

/**
 * Script de teste para as novas APIs integradas:
 * - Llama AI (Open AI 21)
 * - Google Search APIs (2 vers√µes)
 * - AliExpress DataHub API
 */

const BASE_URL = 'http://localhost:3000/api/new-apis';

console.log('üöÄ TESTE DAS NOVAS APIS - EASY GIFT SEARCH');
console.log('============================================');

async function testarTodasAPIs() {
  try {
    console.log('\nüìã 1. TESTANDO INFORMA√á√ïES GERAIS...');
    const info = await axios.get(`${BASE_URL}/info`);
    console.log('‚úÖ Status das APIs:', JSON.stringify(info.data.configuracao, null, 2));

    console.log('\nüß™ 2. TESTANDO TODAS AS APIS...');
    const testeGeral = await axios.get(`${BASE_URL}/teste-todas`);
    console.log('üìä Resultado geral:', testeGeral.data.resumo);
    
    if (testeGeral.data.testes.llama_ai.sucesso) {
      console.log('‚úÖ Llama AI: FUNCIONANDO');
    } else {
      console.log('‚ùå Llama AI: FALHA -', testeGeral.data.testes.llama_ai.erro);
    }

    if (testeGeral.data.testes.google_search.sucesso) {
      console.log('‚úÖ Google Search: FUNCIONANDO');
      console.log('  - API v1:', testeGeral.data.testes.google_search.apis.googleAPI1.sucesso ? 'OK' : 'FALHA');
      console.log('  - API v2:', testeGeral.data.testes.google_search.apis.googleAPI2.sucesso ? 'OK' : 'FALHA');
    } else {
      console.log('‚ùå Google Search: FALHA');
    }

    if (testeGeral.data.testes.aliexpress.sucesso) {
      console.log('‚úÖ AliExpress: FUNCIONANDO');
    } else {
      console.log('‚ùå AliExpress: FALHA -', testeGeral.data.testes.aliexpress.erro);
    }

    console.log('\nü¶ô 3. TESTANDO LLAMA AI - RECOMENDA√á√ÉO...');
    try {
      const recomendacao = await axios.post(`${BASE_URL}/llama/recomendacao`, {
        message: "Preciso de sugest√µes de presentes para uma pessoa de 25 anos que gosta de jogos e tecnologia",
        webAccess: false
      });
      console.log('‚úÖ Recomenda√ß√£o Llama:', recomendacao.data.sucesso ? 'SUCESSO' : 'FALHA');
      if (recomendacao.data.resposta?.choices?.[0]?.message?.content) {
        console.log('üí¨ Resposta:', recomendacao.data.resposta.choices[0].message.content.substring(0, 150) + '...');
      }
    } catch (error) {
      console.log('‚ùå Erro na recomenda√ß√£o Llama:', error.response?.data?.erro || error.message);
    }

    console.log('\nüéÅ 4. TESTANDO LLAMA AI - SUGEST√ïES DE PRESENTES...');
    try {
      const sugestoes = await axios.post(`${BASE_URL}/llama/sugestoes`, {
        idade: "30",
        genero: "feminino",
        interesses: "culin√°ria e leitura",
        orcamento: 150
      });
      console.log('‚úÖ Sugest√µes Llama:', sugestoes.data.sucesso ? 'SUCESSO' : 'FALHA');
      if (sugestoes.data.resposta?.choices?.[0]?.message?.content) {
        console.log('üí° Sugest√µes:', sugestoes.data.resposta.choices[0].message.content.substring(0, 150) + '...');
      }
    } catch (error) {
      console.log('‚ùå Erro nas sugest√µes Llama:', error.response?.data?.erro || error.message);
    }

    console.log('\nüîç 5. TESTANDO GOOGLE SEARCH - BUSCA INTEGRADA...');
    try {
      const googleBusca = await axios.get(`${BASE_URL}/google/buscar?query=presentes tecnologia&api=both`);
      console.log('‚úÖ Google Search:', googleBusca.data.sucesso ? 'SUCESSO' : 'FALHA');
      console.log(`üìä Resultados encontrados: ${googleBusca.data.totalResultados || 0}`);
      if (googleBusca.data.resultados?.length > 0) {
        console.log('üîó Primeiro resultado:', googleBusca.data.resultados[0].titulo.substring(0, 100) + '...');
      }
    } catch (error) {
      console.log('‚ùå Erro no Google Search:', error.response?.data?.erro || error.message);
    }

    console.log('\nüõí 6. TESTANDO ALIEXPRESS - DETALHES DE PRODUTO...');
    try {
      const aliexpress = await axios.get(`${BASE_URL}/aliexpress/detalhes/1005005244562338`);
      console.log('‚úÖ AliExpress:', aliexpress.data.sucesso ? 'SUCESSO' : 'FALHA');
      if (aliexpress.data.produto) {
        console.log('üì± Produto:', aliexpress.data.produto.nome?.substring(0, 100) + '...');
        console.log('üí∞ Pre√ßo:', `R$ ${aliexpress.data.produto.preco}`);
        console.log('‚≠ê Rating:', aliexpress.data.produto.rating);
      }
    } catch (error) {
      console.log('‚ùå Erro no AliExpress:', error.response?.data?.erro || error.message);
    }

    console.log('\nüîÑ 7. TESTANDO BUSCA INTEGRADA...');
    try {
      const buscaIntegrada = await axios.get(`${BASE_URL}/busca-integrada?query=smartphone&categoria=eletr√¥nicos&idade=25&genero=unissex&orcamento=300`);
      console.log('‚úÖ Busca Integrada:', buscaIntegrada.data.sucesso ? 'SUCESSO' : 'FALHA');
      console.log('üìä Fontes ativas:', buscaIntegrada.data.estatisticas.fontes_ativas.join(', '));
      console.log('üîç Google:', buscaIntegrada.data.dados.busca_google.total_resultados || 0, 'resultados');
      console.log('ü§ñ IA:', buscaIntegrada.data.dados.recomendacao_ia.sucesso ? 'Recomenda√ß√£o gerada' : 'Falha na IA');
    } catch (error) {
      console.log('‚ùå Erro na busca integrada:', error.response?.data?.erro || error.message);
    }

    console.log('\nüéØ 8. TESTANDO DEMONSTRA√á√ïES...');
    try {
      const demoLlama = await axios.get(`${BASE_URL}/demo/llama`);
      console.log('‚úÖ Demo Llama:', demoLlama.data?.sucesso ? 'SUCESSO' : 'FALHA');
      
      const demoGoogle = await axios.get(`${BASE_URL}/demo/google`);
      console.log('‚úÖ Demo Google:', demoGoogle.data?.sucesso ? 'SUCESSO' : 'FALHA');
      
      const demoAliExpress = await axios.get(`${BASE_URL}/demo/aliexpress`);
      console.log('‚úÖ Demo AliExpress:', demoAliExpress.data?.sucesso ? 'SUCESSO' : 'FALHA');
    } catch (error) {
      console.log('‚ùå Erro nas demonstra√ß√µes:', error.response?.data?.erro || error.message);
    }

    console.log('\nüéâ TESTE CONCLU√çDO!');
    console.log('====================');
    console.log('üìà Status Final das APIs:');
    console.log(`- Total APIs testadas: 4`);
    console.log(`- APIs funcionando: ${testeGeral.data.resumo.apis_funcionando.length}`);
    console.log(`- Status geral: ${testeGeral.data.resumo.status_geral}`);
    console.log('\nüîó Endpoints dispon√≠veis:');
    console.log('- GET /api/new-apis/info');
    console.log('- GET /api/new-apis/teste-todas');
    console.log('- POST /api/new-apis/llama/recomendacao');
    console.log('- POST /api/new-apis/llama/sugestoes');
    console.log('- GET /api/new-apis/google/buscar');
    console.log('- GET /api/new-apis/aliexpress/detalhes/:itemId');
    console.log('- GET /api/new-apis/busca-integrada');

  } catch (error) {
    console.error('‚ùå Erro geral no teste:', error.message);
    if (error.code === 'ECONNREFUSED') {
      console.log('üí° Dica: Certifique-se de que o servidor est√° rodando na porta 3000');
      console.log('Execute: npm start ou node server.js');
    }
  }
}

// Executar teste se o script for chamado diretamente
if (require.main === module) {
  console.log('üîß Configura√ß√£o:');
  console.log('- RAPIDAPI_KEY_NEW:', process.env.RAPIDAPI_KEY_NEW ? '‚úÖ Configurada' : '‚ùå N√£o configurada');
  console.log('- USE_LLAMA_API:', process.env.USE_LLAMA_API);
  console.log('- USE_GOOGLE_SEARCH_API:', process.env.USE_GOOGLE_SEARCH_API);
  console.log('- USE_ALIEXPRESS_DATAHUB_API:', process.env.USE_ALIEXPRESS_DATAHUB_API);
  console.log('');
  
  testarTodasAPIs();
}

module.exports = { testarTodasAPIs };
