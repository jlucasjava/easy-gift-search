// API Status Configuration - Google Search API only
require('dotenv').config();

/**
 * Display API configuration status on server startup
 */
function displayAPIStatus() {
  console.log('\nüöÄ ============= EASY GIFT SEARCH - API STATUS =============');
  console.log(`üìÖ Data/Hora: ${new Date().toLocaleString('pt-BR')}`);
  console.log(`üåç Ambiente: ${process.env.NODE_ENV || 'development'}`);
  console.log('');

  // Google Search API Status
  const googleSearchEnabled = process.env.USE_GOOGLE_SEARCH_API === 'true';
  const googleSearchKey = !!process.env.GOOGLE_SEARCH_API_KEY;
  const googleSearchCX = !!process.env.GOOGLE_SEARCH_CX;

  console.log('ÔøΩ GOOGLE CUSTOM SEARCH:');
  if (googleSearchEnabled && googleSearchKey && googleSearchCX) {
    console.log('   ‚úÖ ATIVA - Usando Google Custom Search API');
    console.log('   üîë GOOGLE_SEARCH_API_KEY configurada');
    console.log('   üîë GOOGLE_SEARCH_CX configurado');
  } else if (googleSearchEnabled && (!googleSearchKey || !googleSearchCX)) {
    console.log('   ‚ö†Ô∏è CONFIGURA√á√ÉO INCOMPLETA - USE_GOOGLE_SEARCH_API=true mas chaves necess√°rias n√£o encontradas');
    if (!googleSearchKey) console.log('   ‚ùå GOOGLE_SEARCH_API_KEY n√£o configurada');
    if (!googleSearchCX) console.log('   ‚ùå GOOGLE_SEARCH_CX n√£o configurado');
  } else {
    console.log('   ‚ùå INATIVA - Google Custom Search API n√£o habilitada');
  }

  console.log('');
  console.log('üîë CHAVES DE API:');
  console.log(`   GOOGLE_SEARCH_API_KEY: ${process.env.GOOGLE_SEARCH_API_KEY ? '‚úÖ Configurada' : '‚ùå N√£o configurada'}`);
  console.log(`   GOOGLE_SEARCH_CX: ${process.env.GOOGLE_SEARCH_CX ? '‚úÖ Configurado' : '‚ùå N√£o configurado'}`);

  console.log('');
  console.log('‚öôÔ∏è CONFIGURA√á√ïES:');
  console.log(`   USE_GOOGLE_SEARCH_API: ${process.env.USE_GOOGLE_SEARCH_API || 'false'}`);

  console.log('');
  if (googleSearchEnabled && googleSearchKey && googleSearchCX) {
    console.log('üéâ STATUS GERAL: GOOGLE CUSTOM SEARCH API ATIVA');
  } else {
    console.log('‚ö†Ô∏è STATUS GERAL: GOOGLE CUSTOM SEARCH API N√ÉO CONFIGURADA CORRETAMENTE');
  }
  
  console.log('==========================================================\n');
}

/**
 * Check if Google Search API key is configured
 */
function validateAPIConfiguration() {
  const missingKeys = [];
  
  if (process.env.USE_GOOGLE_SEARCH_API === 'true') {
    if (!process.env.GOOGLE_SEARCH_API_KEY) {
      missingKeys.push('GOOGLE_SEARCH_API_KEY (para Google Custom Search)');
    }
    if (!process.env.GOOGLE_SEARCH_CX) {
      missingKeys.push('GOOGLE_SEARCH_CX (para Google Custom Search)');
    }
  }
  if (missingKeys.length > 0) {
    console.log('‚ö†Ô∏è ATEN√á√ÉO: Chaves de API faltando:');
    missingKeys.forEach(key => console.log(`   ‚ùå ${key}`));
    console.log('üîß A API do Google Custom Search pode n√£o funcionar corretamente.\n');
  }
}

/**
 * Verifica o status da API do Google Custom Search
 * @returns {Promise<Object>} Status da API
 */
async function verificarStatusGoogleSearch() {
  try {
    const googleSearchEnabled = process.env.USE_GOOGLE_SEARCH_API === 'true';
    const googleSearchKey = !!process.env.GOOGLE_SEARCH_API_KEY;
    const googleSearchCX = !!process.env.GOOGLE_SEARCH_CX;

    // Verificar se a API est√° ativada e configurada
    if (!googleSearchEnabled) {
      return {
        ativo: false,
        mensagem: 'API do Google Custom Search n√£o est√° ativada (USE_GOOGLE_SEARCH_API=false)'
      };
    }

    if (!googleSearchKey || !googleSearchCX) {
      return {
        ativo: false,
        mensagem: 'Configura√ß√£o incompleta - Chaves de API ausentes',
        detalhes: {
          GOOGLE_SEARCH_API_KEY: googleSearchKey ? 'Configurada' : 'N√£o configurada',
          GOOGLE_SEARCH_CX: googleSearchCX ? 'Configurado' : 'N√£o configurado'
        }
      };
    }

    // Testar se a API est√° funcionando com uma consulta simples
    const googleSearchService = require('../services/googleSearchService');
    const resultado = await googleSearchService.testarAPIsGoogle();

    if (resultado.sucesso) {
      return {
        ativo: true,
        mensagem: 'Google Custom Search API est√° operacional',
        detalhes: {
          resultados: resultado.resultados,
          timestamp: resultado.timestamp
        }
      };
    } else {
      return {
        ativo: false,
        mensagem: `Erro na API: ${resultado.erro || 'Falha no teste'}`,
        detalhes: resultado
      };
    }
  } catch (error) {
    return {
      ativo: false,
      mensagem: `Erro ao verificar status: ${error.message}`,
      erro: error.message
    };
  }
}

module.exports = {
  displayAPIStatus,
  validateAPIConfiguration,
  verificarStatusGoogleSearch
};
