// teste-parametros-otimizados.js - Teste da otimiza√ß√£o de par√¢metros de busca
const axios = require('axios');
require('dotenv').config();

// Simular diferentes configura√ß√µes de par√¢metros para compara√ß√£o
async function testarParametrosOtimizados() {
    console.log('üß™ TESTE DE OTIMIZA√á√ÉO DE PAR√ÇMETROS DE BUSCA');
    console.log('=============================================');
    
    // Verificar configura√ß√£o
    if (!process.env.GOOGLE_SEARCH_API_KEY || !process.env.GOOGLE_SEARCH_CX) {
        console.log('‚ö†Ô∏è API Key ou CX n√£o configurados. Executando em modo de simula√ß√£o.');
        return executarTesteSimulado();
    }
    
    // Consulta de teste
    const query = 'presentes para mulher anivers√°rio';
    
    // Configura√ß√µes a serem testadas
    const configuracoes = [
        {
            nome: 'B√°sica',
            params: {
                key: process.env.GOOGLE_SEARCH_API_KEY,
                cx: process.env.GOOGLE_SEARCH_CX,
                q: query
            }
        },
        {
            nome: 'Com localiza√ß√£o Brasil',
            params: {
                key: process.env.GOOGLE_SEARCH_API_KEY,
                cx: process.env.GOOGLE_SEARCH_CX,
                q: query,
                gl: 'br',
                cr: 'countryBR'
            }
        },
        {
            nome: 'Com idioma Portugu√™s',
            params: {
                key: process.env.GOOGLE_SEARCH_API_KEY,
                cx: process.env.GOOGLE_SEARCH_CX,
                q: query,
                lr: 'lang_pt'
            }
        },
        {
            nome: 'Com termos de e-commerce',
            params: {
                key: process.env.GOOGLE_SEARCH_API_KEY,
                cx: process.env.GOOGLE_SEARCH_CX,
                q: `${query} comprar online loja`
            }
        },
        {
            nome: 'Configura√ß√£o completa otimizada',
            params: {
                key: process.env.GOOGLE_SEARCH_API_KEY,
                cx: process.env.GOOGLE_SEARCH_CX,
                q: `${query} comprar online Brasil loja`,
                gl: 'br',
                cr: 'countryBR',
                lr: 'lang_pt',
                safe: 'active',
                sort: 'relevance',
                filter: '1',
                num: 5
            }
        }
    ];
    
    // Testar cada configura√ß√£o
    for (const config of configuracoes) {
        console.log(`\nüìä TESTANDO CONFIGURA√á√ÉO: ${config.nome}`);
        try {
            const start = Date.now();
            const response = await axios.get('https://www.googleapis.com/customsearch/v1', {
                params: config.params,
                timeout: 10000
            });
            const end = Date.now();
            
            const resultados = response.data.items || [];
            console.log(`‚úÖ Tempo de resposta: ${end - start}ms`);
            console.log(`‚úÖ Resultados encontrados: ${resultados.length}`);
            
            // An√°lise de relev√¢ncia
            if (resultados.length > 0) {
                const temEcommerce = resultados.filter(item => 
                    item.link.includes('produto') || 
                    item.link.includes('shop') || 
                    item.link.includes('store') ||
                    item.link.includes('comprar')).length;
                
                console.log(`‚úÖ Resultados de e-commerce: ${temEcommerce} (${Math.round(temEcommerce/resultados.length*100)}%)`);
                
                // Mostrar o primeiro resultado
                console.log(`\nüìã PRIMEIRO RESULTADO:`);
                console.log(`üî§ T√≠tulo: ${resultados[0].title}`);
                console.log(`üîó Link: ${resultados[0].link}`);
                console.log(`üìù Snippet: ${resultados[0].snippet}`);
            }
        } catch (error) {
            console.error(`‚ùå Erro ao testar configura√ß√£o: ${error.message}`);
            if (error.response) {
                console.error(`‚ùå Status: ${error.response.status}`);
                console.error(`‚ùå Dados: ${JSON.stringify(error.response.data)}`);
            }
        }
    }
    
    console.log('\n=============================================');
    console.log('üèÅ TESTE DE PAR√ÇMETROS FINALIZADO');
    console.log('=============================================');
}

// Vers√£o simulada do teste para quando as chaves da API n√£o est√£o configuradas
function executarTesteSimulado() {
    console.log('\n‚öôÔ∏è EXECUTANDO TESTE SIMULADO DE OTIMIZA√á√ÉO DE PAR√ÇMETROS');
    
    // Configura√ß√µes a serem testadas
    const configuracoes = [
        { nome: 'B√°sica', delay: 800, resultados: 7, ecommerce: 3 },
        { nome: 'Com localiza√ß√£o Brasil', delay: 850, resultados: 8, ecommerce: 5 },
        { nome: 'Com idioma Portugu√™s', delay: 830, resultados: 8, ecommerce: 4 },
        { nome: 'Com termos de e-commerce', delay: 900, resultados: 10, ecommerce: 8 },
        { nome: 'Configura√ß√£o completa otimizada', delay: 950, resultados: 10, ecommerce: 9 }
    ];
    
    // Exemplo de resultado simulado
    const resultadoExemplo = {
        title: 'Presentes para Mulher - Itens de Anivers√°rio Especiais',
        link: 'https://exemplo.com/produtos/presentes-mulher',
        snippet: 'Encontre os melhores presentes para mulher. Itens exclusivos para anivers√°rio com entrega r√°pida e garantia. Presentes a partir de R$ 50,00.'
    };
    
    // Testar cada configura√ß√£o
    for (const config of configuracoes) {
        console.log(`\nüìä SIMULA√á√ÉO DE CONFIGURA√á√ÉO: ${config.nome}`);
        
        console.log(`‚úÖ Tempo de resposta simulado: ${config.delay}ms`);
        console.log(`‚úÖ Resultados encontrados: ${config.resultados}`);
        console.log(`‚úÖ Resultados de e-commerce: ${config.ecommerce} (${Math.round(config.ecommerce/config.resultados*100)}%)`);
        
        // Mostrar o resultado de exemplo
        console.log(`\nüìã EXEMPLO DE RESULTADO (SIMULADO):`);
        console.log(`üî§ T√≠tulo: ${resultadoExemplo.title}`);
        console.log(`üîó Link: ${resultadoExemplo.link}`);
        console.log(`üìù Snippet: ${resultadoExemplo.snippet}`);
    }
    
    console.log('\n‚ö†Ô∏è OBSERVA√á√ïES SOBRE PAR√ÇMETROS OTIMIZADOS:');
    console.log('1. Adicionar localiza√ß√£o (gl=br, cr=countryBR) melhora a relev√¢ncia regional');
    console.log('2. Definir idioma (lr=lang_pt) filtra resultados em portugu√™s');
    console.log('3. Incluir termos como "comprar", "loja" aumenta resultados de e-commerce');
    console.log('4. Combinar todos os par√¢metros otimizados fornece os melhores resultados');
    console.log('5. Recomendado usar a configura√ß√£o completa otimizada em produ√ß√£o');
    
    console.log('\n=============================================');
    console.log('üèÅ TESTE SIMULADO DE PAR√ÇMETROS FINALIZADO');
    console.log('=============================================');
}

// Executar o teste
testarParametrosOtimizados();
