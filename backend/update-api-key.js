const fs = require('fs');
const readline = require('readline');

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

// Fun√ß√£o para atualizar a chave da API no arquivo .env
function updateApiKey(newKey) {
  try {
    // Ler o arquivo .env
    const envPath = './.env';
    let envContent = fs.readFileSync(envPath, 'utf8');
    
    // Substituir a chave da API
    envContent = envContent.replace(
      /GOOGLE_SEARCH_API_KEY=.*/,
      `GOOGLE_SEARCH_API_KEY=${newKey}`
    );
    
    // Escrever de volta no arquivo
    fs.writeFileSync(envPath, envContent);
    
    console.log('‚úÖ Chave da API atualizada com sucesso no arquivo .env');
    
    // Verificar se a atualiza√ß√£o foi bem-sucedida
    const updatedContent = fs.readFileSync(envPath, 'utf8');
    if (updatedContent.includes(`GOOGLE_SEARCH_API_KEY=${newKey}`)) {
      console.log('‚úì Confirmado: a nova chave est√° no arquivo .env');
    } else {
      console.log('‚ö†Ô∏è Aviso: N√£o foi poss√≠vel confirmar a atualiza√ß√£o da chave');
    }
    
    return true;
  } catch (error) {
    console.error('‚ùå Erro ao atualizar a chave da API:', error.message);
    return false;
  }
}

// Pedir a nova chave ao usu√°rio
rl.question('üîë Digite a nova chave de API do Google: ', (newKey) => {
  if (newKey.trim()) {
    updateApiKey(newKey.trim());
  } else {
    console.log('‚ùå Nenhuma chave fornecida. O arquivo .env n√£o foi alterado.');
  }
  rl.close();
});
